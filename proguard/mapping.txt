android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isAdded() -> d
    boolean isDetached() -> e
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> f
    void onResume() -> g
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> h
    void onStop() -> i
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> j
    void onDestroy() -> k
    void initState() -> l
    void onDetach() -> m
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> n
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> o
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> p
    void performResume() -> q
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> r
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> s
    void performStop() -> t
    void performReallyStop() -> u
    void performDestroyView() -> v
    void performDestroy() -> w
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.k:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.l:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.m:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.n:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.r:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.u:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.v:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.w:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.x:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> c
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> d
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.y:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.z:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.aa:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ab:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ac:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ad:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.crittercism.NotificationActivity -> com.crittercism.NotificationActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.crittercism.app.Crittercism -> com.crittercism.app.a:
    com.crittercism.app.Crittercism c -> c
    crittercism.android.b d -> d
    crittercism.android.d e -> e
    crittercism.android.e f -> f
    boolean g -> g
    android.content.Context h -> h
    float i -> i
    java.lang.String a -> a
    crittercism.android.i j -> j
    crittercism.android.m k -> k
    crittercism.android.k l -> l
    crittercism.android.l m -> m
    boolean n -> n
    boolean o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    java.lang.String s -> s
    int t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
    java.lang.String x -> x
    boolean y -> y
    android.os.Handler b -> b
    com.crittercism.app.Crittercism a() -> a
    boolean init(android.content.Context,java.lang.String,org.json.JSONObject[]) -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean a(java.lang.Throwable) -> a
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    boolean i() -> i
    boolean j() -> j
    java.lang.String k() -> k
    android.content.Context l() -> l
    crittercism.android.b m() -> m
    crittercism.android.d n() -> n
    crittercism.android.i o() -> o
    void a(crittercism.android.i) -> a
    crittercism.android.m p() -> p
    void a(crittercism.android.m) -> a
    crittercism.android.k q() -> q
    void a(crittercism.android.k) -> a
    crittercism.android.l r() -> r
    void a(crittercism.android.l) -> a
    java.lang.String z() -> B
    int A() -> C
    java.lang.String s() -> s
    java.lang.String t() -> t
    boolean c(android.content.Context) -> c
    boolean getOptOutStatus() -> u
    boolean d(android.content.Context) -> d
    boolean didCrashOnLastAppLoad() -> v
    java.lang.String getNotificationTitle() -> w
    boolean v() -> x
    int w() -> y
    java.lang.String x() -> z
    void y() -> A
    boolean a(android.content.Context) -> a
    void a(com.crittercism.app.Crittercism,boolean) -> a
    boolean b(android.content.Context) -> b
    void b(com.crittercism.app.Crittercism,boolean) -> b
    void a(com.crittercism.app.Crittercism) -> a
    boolean b(com.crittercism.app.Crittercism) -> b
    void c(com.crittercism.app.Crittercism,boolean) -> c
    android.content.Context c(com.crittercism.app.Crittercism) -> c
com.crittercism.app.Crittercism$1 -> com.crittercism.app.b:
    com.crittercism.app.Crittercism a -> a
    void run() -> run
com.crittercism.app.Crittercism$10 -> com.crittercism.app.c:
    com.crittercism.app.Crittercism a -> a
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.crittercism.app.Crittercism$11 -> com.crittercism.app.d:
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.crittercism.app.Crittercism$4 -> com.crittercism.app.e:
    com.crittercism.app.Crittercism a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.crittercism.app.Crittercism$6 -> com.crittercism.app.f:
    com.crittercism.app.Crittercism a -> a
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.crittercism.app.Crittercism$7 -> com.crittercism.app.g:
    com.crittercism.app.Crittercism a -> a
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.crittercism.app.Crittercism$9 -> com.crittercism.app.h:
    com.crittercism.app.Crittercism a -> a
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.crittercism.app.Crittercism$b -> com.crittercism.app.i:
    java.lang.Thread$UncaughtExceptionHandler b -> b
    com.crittercism.app.Crittercism a -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.crittercism.app.CrittercismNDK -> com.crittercism.app.CrittercismNDK:
    java.lang.String LIBPATH -> a
    boolean installNdk(java.lang.String) -> installNdk
    boolean checkLibraryVersion(int) -> checkLibraryVersion
    void installNdkLib(android.content.Context,java.lang.String) -> a
    boolean installLib(android.content.Context) -> a
com.friends.zingradio.ZingRadioApplication -> com.friends.zingradio.ZingRadioApplication:
    java.lang.String TAG -> a
    java.lang.String DATA_FILE_NAME -> b
    com.friends.zingradio.entity.Radio mRadio -> c
    com.friends.zingradio.entity.Radio getRadio() -> a
    void onCreate() -> onCreate
    void loadData() -> b
    void loadDataXml() -> c
com.friends.zingradio.activity.MainActivity -> com.friends.zingradio.activity.MainActivity:
    java.lang.String TAG -> q
    shared.ui.actionscontentview.ActionsContentView viewActionsContentView -> r
    android.net.Uri currentUri -> n
    android.content.ServiceConnection mMusicServiceConnection -> o
    com.friends.zingradio.fragment.PlayerFragment mPlayerFragment -> s
    com.friends.zingradio.fragment.StationListFragment mStationListFragment -> t
    com.friends.zingradio.media.MusicService mMusicService -> p
    com.friends.zingradio.util.NetworkConnectivityListener$State mNetworkState -> u
    android.os.Handler mNetWorkHandler -> v
    com.friends.zingradio.util.NetworkConnectivityListener mNetworkListener -> w
    android.content.ServiceConnection musicServiceConnection -> x
    com.friends.zingradio.async.GetStationAudioListAsync mGetStationAudioListAsync -> y
    shared.ui.actionscontentview.ActionsContentView getViewActionsContentView() -> f
    com.friends.zingradio.util.NetworkConnectivityListener$State getNetworkState() -> g
    void onCreate(android.os.Bundle) -> onCreate
    void showAboutDialog() -> j
    com.friends.zingradio.util.NetworkConnectivityListener getNetworkConnectivityListener() -> h
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void playSuggestedStation() -> i
    void onGetStationAudioListAsyncCompleted(java.util.ArrayList) -> a
    void startMusicService(android.content.Intent) -> a
    void onStart() -> onStart
    void onStop() -> onStop
    void onPause() -> onPause
    void onResume() -> onResume
    void onResumeFragments() -> a
    android.support.v4.app.Fragment updateContent(android.net.Uri) -> a
    void onActionsButtonClick1(android.view.View) -> onActionsButtonClick1
    android.support.v4.app.Fragment getFragment(android.support.v4.app.FragmentManager,java.lang.String) -> a
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    com.friends.zingradio.fragment.PlayerFragment access$0(com.friends.zingradio.activity.MainActivity) -> a
    com.friends.zingradio.util.NetworkConnectivityListener$State access$1(com.friends.zingradio.activity.MainActivity) -> b
    void access$2(com.friends.zingradio.activity.MainActivity) -> c
    com.friends.zingradio.util.NetworkConnectivityListener access$3(com.friends.zingradio.activity.MainActivity) -> d
    void access$4(com.friends.zingradio.activity.MainActivity,com.friends.zingradio.util.NetworkConnectivityListener$State) -> a
com.friends.zingradio.activity.MainActivity$1 -> com.friends.zingradio.activity.a:
    com.friends.zingradio.activity.MainActivity this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.friends.zingradio.activity.MainActivity$2 -> com.friends.zingradio.activity.b:
    com.friends.zingradio.activity.MainActivity this$0 -> a
    com.friends.zingradio.adapter.ActionsAdapter val$actionsAdapter -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.friends.zingradio.activity.MainActivity$3 -> com.friends.zingradio.activity.c:
    com.friends.zingradio.activity.MainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.friends.zingradio.activity.SplashScreenActivity -> com.friends.zingradio.activity.SplashScreenActivity:
    java.lang.String TAG -> a
    void onCreate(android.os.Bundle) -> onCreate
com.friends.zingradio.activity.SplashScreenActivity$1 -> com.friends.zingradio.activity.d:
    com.friends.zingradio.activity.SplashScreenActivity this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.friends.zingradio.adapter.ActionsAdapter -> com.friends.zingradio.a.a:
    android.view.LayoutInflater mInflater -> d
    java.util.ArrayList mCategories -> a
    java.lang.String VIEW_TYPE_HEADER_STR -> b
    java.lang.String VIEW_TYPE_CATEGORY_STR -> c
    java.lang.String[] mTitles -> e
    java.lang.String[] mUrls -> f
    android.content.res.TypedArray mIcons -> g
    int getCount() -> getCount
    android.net.Uri getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
com.friends.zingradio.adapter.ActionsAdapter$ViewHolder -> com.friends.zingradio.a.b:
    android.widget.TextView text -> a
com.friends.zingradio.adapter.StationAdapter -> com.friends.zingradio.a.c:
    java.lang.String TAG -> a
    android.view.LayoutInflater mInflater -> c
    java.util.ArrayList mStations -> d
    android.content.Context mContext -> b
    void setStations(java.util.ArrayList) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.friends.zingradio.adapter.StationAdapter$ViewHolder -> com.friends.zingradio.a.d:
    android.widget.TextView text -> a
com.friends.zingradio.async.GetPerformerCoverAsync -> com.friends.zingradio.b.a:
    java.lang.String TAG1 -> a
    com.friends.zingradio.async.OnGetPerformerCoverAsyncCompleted mOnGetPerformerCoverAsyncCompletedListener -> b
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    android.graphics.Bitmap downloadImage(java.lang.String) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.friends.zingradio.async.GetStationAudioListAsync -> com.friends.zingradio.b.b:
    java.lang.String TAG -> a
    java.util.ArrayList mAudioList -> b
    com.friends.zingradio.async.OnGetStationAudioListAsyncCompleted mOnGetStationAudioListAsyncCompletedListener -> c
    java.io.InputStream mInputStream -> d
    java.lang.String doInBackground(java.lang.String[]) -> a
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.String) -> a
    void onPreExecute() -> onPreExecute
    void onProgressUpdate(java.lang.String[]) -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.friends.zingradio.async.OnGetPerformerCoverAsyncCompleted -> com.friends.zingradio.b.c:
    void onGetPerformerCoverAsyncCompleted(android.graphics.Bitmap) -> a
com.friends.zingradio.async.OnGetStationAudioListAsyncCompleted -> com.friends.zingradio.b.d:
    void onGetStationAudioListAsyncCompleted(java.util.ArrayList) -> a
com.friends.zingradio.entity.AudioItem -> com.friends.zingradio.c.a:
    java.lang.String mId -> a
    java.lang.String mTitle -> b
    java.lang.String mPerformer -> c
    java.lang.String mSource -> d
    java.lang.String mThumbnail -> e
    java.lang.String mLink -> f
    java.lang.String mPlink -> g
    int mDuration -> h
    java.lang.String mAlbum -> i
    void setId(java.lang.String) -> a
    java.lang.String getTitle() -> a
    void setTitle(java.lang.String) -> b
    java.lang.String getPerformer() -> b
    void setPerformer(java.lang.String) -> c
    java.lang.String getSource() -> c
    void setSource(java.lang.String) -> d
    java.lang.String getThumbnail() -> d
    void setThumbnail(java.lang.String) -> e
    void setLink(java.lang.String) -> f
    void setPlink(java.lang.String) -> g
    int getDuration() -> e
    void setDuration(int) -> a
    java.lang.String getAlbum() -> f
    void setAlbum(java.lang.String) -> h
com.friends.zingradio.entity.Category -> com.friends.zingradio.c.b:
    java.lang.String mId -> a
    java.lang.String mName -> b
    java.lang.String mIcon -> c
    java.lang.String mUrl -> d
    java.util.ArrayList mStations -> e
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    void setIcon(java.lang.String) -> c
    void setUrl(java.lang.String) -> d
    java.util.ArrayList getStations() -> c
    void setStations(java.util.ArrayList) -> a
com.friends.zingradio.entity.Radio -> com.friends.zingradio.c.c:
    java.lang.String TAG -> a
    java.util.ArrayList mCategories -> b
    java.util.ArrayList getCategories() -> a
    void setCategories(java.util.ArrayList) -> a
    com.friends.zingradio.entity.Category getCategory(java.lang.String) -> a
    com.friends.zingradio.entity.Station getStation(java.lang.String) -> b
com.friends.zingradio.entity.Station -> com.friends.zingradio.c.d:
    java.lang.String TAG -> a
    java.lang.String mId -> b
    java.lang.String mIcon -> c
    java.lang.String mName -> d
    java.lang.String mUrl -> e
    java.lang.String mServerId -> f
    java.util.ArrayList mAudioItems -> g
    java.util.ArrayList getAudioItems() -> a
    void setAudioItems(java.util.ArrayList) -> a
    java.lang.String getServerId() -> b
    void setServerId(java.lang.String) -> a
    void setIcon(java.lang.String) -> b
    void setId(java.lang.String) -> c
    java.lang.String getName() -> c
    void setName(java.lang.String) -> d
    void setUrl(java.lang.String) -> e
com.friends.zingradio.fragment.PlayerFragment -> com.friends.zingradio.d.a:
    java.lang.String TAG -> P
    java.lang.String URI_SCHEME -> R
    android.net.Uri URI -> Q
    android.view.View viewRoot -> S
    boolean isPlaylistChanged -> T
    android.widget.ImageButton mPlayPauseButton -> U
    android.widget.ImageButton mNextButton -> V
    android.widget.SeekBar mSeekbar -> W
    android.widget.TextView mSongCurrentDurationLabel -> X
    android.widget.TextView mSongTotalDurationLabel -> Y
    android.content.Context mContext -> Z
    com.friends.zingradio.entity.Station mStation -> aa
    com.friends.zingradio.async.GetPerformerCoverAsync mGetPerformerCoverAsync -> ab
    com.friends.zingradio.media.MusicService mMusicService -> ac
    com.friends.zingradio.fragment.PlayerFragment mPlayerFragment -> ad
    android.os.Handler mSeekbarHandler -> ae
    java.lang.Runnable mUpdateTimeTask -> af
    android.content.Context getContext() -> x
    void setContext(android.content.Context) -> a
    void setPlaylistChanged(boolean) -> b
    void setMusicService(com.friends.zingradio.media.MusicService) -> a
    com.friends.zingradio.entity.Station getStation() -> y
    void setStation(com.friends.zingradio.entity.Station) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void updateProgressBar() -> z
    void updatePlayPauseButton(com.friends.zingradio.media.MusicService$State) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onPause() -> h
    void onSaveInstanceState(android.os.Bundle) -> f
    void onResume() -> g
    void onStop() -> i
    void onDestroy() -> k
    void onHiddenChanged(boolean) -> a
    void onGetPerformerCoverAsyncCompleted(android.graphics.Bitmap) -> a
    void onButtonClick(android.view.View) -> a
    void updateView(com.friends.zingradio.entity.AudioItem,boolean) -> a
    void playAllSongsInCurrentStation() -> A
    void enableButtons(boolean) -> c
    void enableSeekbar(boolean) -> d
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    com.friends.zingradio.media.MusicService access$0(com.friends.zingradio.fragment.PlayerFragment) -> a
    android.widget.TextView access$1(com.friends.zingradio.fragment.PlayerFragment) -> b
    android.widget.TextView access$2(com.friends.zingradio.fragment.PlayerFragment) -> c
    android.widget.SeekBar access$3(com.friends.zingradio.fragment.PlayerFragment) -> d
    android.os.Handler access$4(com.friends.zingradio.fragment.PlayerFragment) -> e
    android.widget.ImageButton access$5(com.friends.zingradio.fragment.PlayerFragment) -> f
    android.widget.ImageButton access$6(com.friends.zingradio.fragment.PlayerFragment) -> g
    com.friends.zingradio.fragment.PlayerFragment access$7(com.friends.zingradio.fragment.PlayerFragment) -> h
com.friends.zingradio.fragment.PlayerFragment$1 -> com.friends.zingradio.d.b:
    com.friends.zingradio.fragment.PlayerFragment this$0 -> a
    void run() -> run
com.friends.zingradio.fragment.PlayerFragment$2 -> com.friends.zingradio.d.c:
    com.friends.zingradio.fragment.PlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.friends.zingradio.fragment.PlayerFragment$3 -> com.friends.zingradio.d.d:
    com.friends.zingradio.fragment.PlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.friends.zingradio.fragment.PlayerFragment$4 -> com.friends.zingradio.d.e:
    com.friends.zingradio.fragment.PlayerFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.friends.zingradio.fragment.PlayerFragment$5 -> com.friends.zingradio.d.f:
    com.friends.zingradio.fragment.PlayerFragment this$0 -> a
    void onFinish() -> onFinish
    void onTick(long) -> onTick
com.friends.zingradio.fragment.StationListFragment -> com.friends.zingradio.d.g:
    java.lang.String TAG -> P
    android.view.View viewRoot -> Q
    com.friends.zingradio.adapter.StationAdapter mSA -> R
    com.friends.zingradio.async.GetStationAudioListAsync mGetStationAudioListAsync -> S
    com.friends.zingradio.fragment.StationListFragment mListener -> T
    java.lang.String mCategoryId -> U
    java.lang.String mCategoryName -> V
    com.friends.zingradio.fragment.PlayerFragment mPlayerFragment -> W
    com.friends.zingradio.entity.Station mSelectedStation -> X
    android.content.Context mContext -> Y
    java.util.ArrayList mStations -> Z
    void setContext(android.content.Context) -> a
    void setCategoryId(java.lang.String) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    com.friends.zingradio.util.NetworkConnectivityListener$State getNetworkState() -> y
    void setCategoryName(java.lang.String) -> b
    void populateStations() -> x
    void onResume() -> g
    void onGetStationAudioListAsyncCompleted(java.util.ArrayList) -> a
    com.friends.zingradio.util.NetworkConnectivityListener$State access$0(com.friends.zingradio.fragment.StationListFragment) -> a
    java.util.ArrayList access$1(com.friends.zingradio.fragment.StationListFragment) -> b
    void access$2(com.friends.zingradio.fragment.StationListFragment,com.friends.zingradio.entity.Station) -> a
    android.view.View access$3(com.friends.zingradio.fragment.StationListFragment) -> c
    com.friends.zingradio.entity.Station access$4(com.friends.zingradio.fragment.StationListFragment) -> d
    com.friends.zingradio.async.GetStationAudioListAsync access$5(com.friends.zingradio.fragment.StationListFragment) -> e
    com.friends.zingradio.fragment.StationListFragment access$6(com.friends.zingradio.fragment.StationListFragment) -> f
    void access$7(com.friends.zingradio.fragment.StationListFragment,com.friends.zingradio.async.GetStationAudioListAsync) -> a
    android.content.Context access$8(com.friends.zingradio.fragment.StationListFragment) -> g
    void access$9(com.friends.zingradio.fragment.StationListFragment,com.friends.zingradio.fragment.PlayerFragment) -> a
    com.friends.zingradio.fragment.PlayerFragment access$10(com.friends.zingradio.fragment.StationListFragment) -> h
com.friends.zingradio.fragment.StationListFragment$1 -> com.friends.zingradio.d.h:
    com.friends.zingradio.fragment.StationListFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.friends.zingradio.fragment.StationListFragment$2 -> com.friends.zingradio.d.i:
    com.friends.zingradio.fragment.StationListFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.friends.zingradio.media.AudioFocusHelper -> com.friends.zingradio.media.a:
    android.media.AudioManager mAM -> a
    com.friends.zingradio.media.MusicFocusable mFocusable -> b
    boolean requestFocus() -> a
    boolean abandonFocus() -> b
    void onAudioFocusChange(int) -> onAudioFocusChange
com.friends.zingradio.media.MediaButtonHelper -> com.friends.zingradio.media.b:
    java.lang.reflect.Method sMethodRegisterMediaButtonEventReceiver -> a
    java.lang.reflect.Method sMethodUnregisterMediaButtonEventReceiver -> b
    void initializeStaticCompatMethods() -> a
    void registerMediaButtonEventReceiverCompat(android.media.AudioManager,android.content.ComponentName) -> a
com.friends.zingradio.media.MusicFocusable -> com.friends.zingradio.media.c:
    void onGainedAudioFocus() -> a
    void onLostAudioFocus(boolean) -> a
com.friends.zingradio.media.MusicIntentReceiver -> com.friends.zingradio.media.d:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.friends.zingradio.media.MusicService -> com.friends.zingradio.media.MusicService:
    java.lang.String TAG -> a
    java.util.ArrayList mClients -> q
    android.media.MediaPlayer mPlayer -> b
    com.friends.zingradio.media.AudioFocusHelper mAudioFocusHelper -> c
    com.friends.zingradio.media.MusicService$State mState -> d
    com.friends.zingradio.media.MusicService$PauseReason mPauseReason -> e
    com.friends.zingradio.media.MusicService$AudioFocus mAudioFocus -> f
    java.lang.String mNotificationSubText -> g
    boolean mIsStreaming -> h
    android.net.wifi.WifiManager$WifiLock mWifiLock -> i
    int NOTIFICATION_ID -> j
    com.friends.zingradio.media.RemoteControlClientCompat mRemoteControlClientCompat -> k
    android.content.ComponentName mMediaButtonReceiverComponent -> l
    android.media.AudioManager mAudioManager -> m
    android.app.NotificationManager mNotificationManager -> n
    android.app.Notification mNotification -> o
    int mPlayingIndex -> r
    android.os.IBinder mBinder -> s
    com.friends.zingradio.fragment.PlayerFragment mPlayerFragment -> t
    com.friends.zingradio.entity.Station mStation -> u
    com.friends.zingradio.entity.AudioItem mPlayingItem -> p
    com.friends.zingradio.util.NetworkConnectivityListener$State mNetworkState -> v
    android.media.MediaPlayer getPlayer() -> b
    com.friends.zingradio.media.MusicService$State getState() -> c
    void setNetworkState(com.friends.zingradio.util.NetworkConnectivityListener$State) -> a
    com.friends.zingradio.entity.Station getStation() -> d
    void setStation(com.friends.zingradio.entity.Station) -> a
    void setPlayerFragment(com.friends.zingradio.fragment.PlayerFragment) -> a
    void createMediaPlayerIfNeeded() -> e
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void processTogglePlaybackRequest() -> f
    void processPlayRequest() -> g
    void processPauseRequest() -> h
    void relaxResources(boolean) -> b
    void giveUpAudioFocus() -> i
    void configAndStartMediaPlayer() -> j
    void processPlaylist() -> k
    void tryToGetAudioFocus() -> l
    void playNextSong(com.friends.zingradio.entity.AudioItem) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void updateNotification(java.lang.String) -> a
    void setUpAsForeground(java.lang.String) -> b
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onGainedAudioFocus() -> a
    void onLostAudioFocus(boolean) -> a
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void processPlayNext() -> n
    void resumePlay() -> m
com.friends.zingradio.media.MusicService$AudioFocus -> com.friends.zingradio.media.e:
    com.friends.zingradio.media.MusicService$AudioFocus NoFocusNoDuck -> a
    com.friends.zingradio.media.MusicService$AudioFocus NoFocusCanDuck -> b
    com.friends.zingradio.media.MusicService$AudioFocus Focused -> c
    com.friends.zingradio.media.MusicService$AudioFocus[] ENUM$VALUES -> d
    com.friends.zingradio.media.MusicService$AudioFocus[] values() -> values
    com.friends.zingradio.media.MusicService$AudioFocus valueOf(java.lang.String) -> valueOf
com.friends.zingradio.media.MusicService$MusicServiceBinder -> com.friends.zingradio.media.f:
    com.friends.zingradio.media.MusicService this$0 -> a
    com.friends.zingradio.media.MusicService getService() -> a
com.friends.zingradio.media.MusicService$PauseReason -> com.friends.zingradio.media.g:
    com.friends.zingradio.media.MusicService$PauseReason UserRequest -> a
    com.friends.zingradio.media.MusicService$PauseReason FocusLoss -> b
    com.friends.zingradio.media.MusicService$PauseReason[] ENUM$VALUES -> c
    com.friends.zingradio.media.MusicService$PauseReason[] values() -> values
    com.friends.zingradio.media.MusicService$PauseReason valueOf(java.lang.String) -> valueOf
com.friends.zingradio.media.MusicService$State -> com.friends.zingradio.media.h:
    com.friends.zingradio.media.MusicService$State Stopped -> a
    com.friends.zingradio.media.MusicService$State Preparing -> b
    com.friends.zingradio.media.MusicService$State Playing -> c
    com.friends.zingradio.media.MusicService$State Paused -> d
    com.friends.zingradio.media.MusicService$State[] ENUM$VALUES -> e
    com.friends.zingradio.media.MusicService$State[] values() -> values
    com.friends.zingradio.media.MusicService$State valueOf(java.lang.String) -> valueOf
com.friends.zingradio.media.RemoteControlClientCompat -> com.friends.zingradio.media.i:
    java.lang.Class sRemoteControlClientClass -> a
    java.lang.reflect.Method sRCCEditMetadataMethod -> b
    java.lang.reflect.Method sRCCSetPlayStateMethod -> c
    java.lang.reflect.Method sRCCSetTransportControlFlags -> d
    boolean sHasRemoteControlAPIs -> e
    java.lang.Object mActualRemoteControlClient -> f
    java.lang.Class getActualRemoteControlClientClass(java.lang.ClassLoader) -> a
    com.friends.zingradio.media.RemoteControlClientCompat$MetadataEditorCompat editMetadata(boolean) -> a
    void setPlaybackState(int) -> a
    void setTransportControlFlags(int) -> b
    java.lang.Object getActualRemoteControlClientObject() -> a
    boolean access$0() -> b
com.friends.zingradio.media.RemoteControlClientCompat$MetadataEditorCompat -> com.friends.zingradio.media.j:
    java.lang.reflect.Method mPutStringMethod -> b
    java.lang.reflect.Method mPutBitmapMethod -> c
    java.lang.reflect.Method mPutLongMethod -> d
    java.lang.reflect.Method mClearMethod -> e
    java.lang.reflect.Method mApplyMethod -> f
    java.lang.Object mActualMetadataEditor -> g
    com.friends.zingradio.media.RemoteControlClientCompat this$0 -> a
    com.friends.zingradio.media.RemoteControlClientCompat$MetadataEditorCompat putString(int,java.lang.String) -> a
    com.friends.zingradio.media.RemoteControlClientCompat$MetadataEditorCompat putBitmap(int,android.graphics.Bitmap) -> a
    com.friends.zingradio.media.RemoteControlClientCompat$MetadataEditorCompat putLong(int,long) -> a
    void apply() -> a
com.friends.zingradio.media.RemoteControlHelper -> com.friends.zingradio.media.k:
    boolean sHasRemoteControlAPIs -> a
    java.lang.reflect.Method sRegisterRemoteControlClientMethod -> b
    java.lang.reflect.Method sUnregisterRemoteControlClientMethod -> c
    void registerRemoteControlClient(android.media.AudioManager,com.friends.zingradio.media.RemoteControlClientCompat) -> a
com.friends.zingradio.util.Constants -> com.friends.zingradio.e.a:
    java.lang.String ROOT_RADIO_URL -> a
    java.lang.String ROOT_AJAX_URL -> b
    java.lang.String ROOT_XML_RADIO_URL -> c
com.friends.zingradio.util.DataXmlParser -> com.friends.zingradio.e.b:
    java.lang.String XML_DATA_ROOT_NODE -> a
    java.lang.String XML_DATA_CATEGORIES_NODE -> b
    java.lang.String XML_DATA_CATEGORY_NODE -> c
    java.lang.String XML_DATA_CATEGORY_NAME_NODE -> d
    java.lang.String XML_DATA_CATEGORY_ICON_NODE -> e
    java.lang.String XML_DATA_CATEGORY_ID_NODE -> f
    java.lang.String XML_DATA_CATEGORY_URL_NODE -> g
    java.lang.String XML_DATA_STATIONS_NODE -> h
    java.lang.String XML_DATA_STATION_NODE -> i
    java.lang.String XML_DATA_STATION_NAME_NODE -> j
    java.lang.String XML_DATA_STATION_ICON_NODE -> k
    java.lang.String XML_DATA_STATION_ID_NODE -> l
    java.lang.String XML_DATA_STATION_SERVERID_NODE -> m
    java.lang.String XML_DATA_STATION_URL_NODE -> n
    java.lang.String TAG -> o
    com.friends.zingradio.entity.Radio mRadio -> r
    com.friends.zingradio.entity.Category mCat -> s
    com.friends.zingradio.entity.Station mSta -> t
    com.friends.zingradio.entity.Radio parseDataXml(java.io.InputStream) -> a
    java.util.ArrayList readCategories(java.io.InputStream) -> b
    com.friends.zingradio.entity.Category readCategory(org.xmlpull.v1.XmlPullParser) -> b
    java.util.ArrayList readStations(org.xmlpull.v1.XmlPullParser) -> c
    com.friends.zingradio.entity.Station readStation(org.xmlpull.v1.XmlPullParser) -> d
    java.lang.String readText(org.xmlpull.v1.XmlPullParser) -> e
com.friends.zingradio.util.NetworkConnectivityListener -> com.friends.zingradio.e.c:
    android.content.Context mContext -> a
    java.util.HashMap mHandlers -> b
    com.friends.zingradio.util.NetworkConnectivityListener$State mState -> c
    boolean mListening -> d
    java.lang.String mReason -> e
    boolean mIsFailover -> f
    android.net.NetworkInfo mNetworkInfo -> g
    android.net.NetworkInfo mOtherNetworkInfo -> h
    com.friends.zingradio.util.NetworkConnectivityListener$ConnectivityBroadcastReceiver mReceiver -> i
    void startListening(android.content.Context) -> a
    void stopListening() -> a
    void registerHandler(android.os.Handler,int) -> a
    void unregisterHandler(android.os.Handler) -> a
    com.friends.zingradio.util.NetworkConnectivityListener$State getState() -> b
    boolean access$0(com.friends.zingradio.util.NetworkConnectivityListener) -> a
    com.friends.zingradio.util.NetworkConnectivityListener$State access$1(com.friends.zingradio.util.NetworkConnectivityListener) -> b
    void access$2(com.friends.zingradio.util.NetworkConnectivityListener,com.friends.zingradio.util.NetworkConnectivityListener$State) -> a
    void access$3(com.friends.zingradio.util.NetworkConnectivityListener,android.net.NetworkInfo) -> a
    void access$4(com.friends.zingradio.util.NetworkConnectivityListener,android.net.NetworkInfo) -> b
    void access$5(com.friends.zingradio.util.NetworkConnectivityListener,java.lang.String) -> a
    void access$6(com.friends.zingradio.util.NetworkConnectivityListener,boolean) -> a
    java.util.HashMap access$7(com.friends.zingradio.util.NetworkConnectivityListener) -> c
com.friends.zingradio.util.NetworkConnectivityListener$ConnectivityBroadcastReceiver -> com.friends.zingradio.e.d:
    com.friends.zingradio.util.NetworkConnectivityListener this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.friends.zingradio.util.NetworkConnectivityListener$State -> com.friends.zingradio.e.e:
    com.friends.zingradio.util.NetworkConnectivityListener$State UNKNOWN -> a
    com.friends.zingradio.util.NetworkConnectivityListener$State CONNECTED -> b
    com.friends.zingradio.util.NetworkConnectivityListener$State NOT_CONNECTED -> c
    com.friends.zingradio.util.NetworkConnectivityListener$State[] ENUM$VALUES -> d
    com.friends.zingradio.util.NetworkConnectivityListener$State[] values() -> values
    com.friends.zingradio.util.NetworkConnectivityListener$State valueOf(java.lang.String) -> valueOf
com.friends.zingradio.util.RadioXmlParser -> com.friends.zingradio.e.f:
    java.lang.String ROOT_TAG -> a
    java.lang.String AUDIO_ITEM_TAG -> b
    java.lang.String AUDIO_ITEM_ID_TAG -> c
    java.lang.String AUDIO_ITEM_TYPE_TAG -> d
    java.lang.String AUDIO_ITEM_TITLE_TAG -> e
    java.lang.String AUDIO_ITEM_PERFORMER_TAG -> f
    java.lang.String AUDIO_ITEM_SOURCE_TAG -> g
    java.lang.String AUDIO_ITEM_THUMBNAIL_TAG -> h
    java.lang.String AUDIO_ITEM_LINK_TAG -> i
    java.lang.String AUDIO_ITEM_PLINK_TAG -> j
    java.lang.String AUDIO_ITEM_DURATION_TAG -> k
    java.lang.String AUDIO_ITEM_ALBUM_TAG -> l
    java.util.ArrayList parseRadioXml(java.io.InputStream) -> a
    com.friends.zingradio.entity.AudioItem readItem(org.xmlpull.v1.XmlPullParser) -> b
    java.lang.String readTagValue(org.xmlpull.v1.XmlPullParser,java.lang.String) -> a
com.friends.zingradio.util.StationSuggestion -> com.friends.zingradio.e.g:
    java.util.Hashtable mSuggestedStations -> a
    void buildSuggestedStation() -> a
    java.lang.String getSuggestStationForMonday() -> c
    java.lang.String getSuggestStationForTuesday() -> d
    java.lang.String getSuggestStationForWednesday() -> e
    java.lang.String getSuggestStationForThursday() -> f
    java.lang.String getSuggestStationForFriday() -> g
    java.lang.String getSuggestStationForSaturday() -> h
    java.lang.String getSuggestStationForSunday() -> i
    java.lang.String getSuggestStation() -> b
com.friends.zingradio.util.Utilities -> com.friends.zingradio.e.h:
    java.lang.String milliSecondsToTimer(long) -> a
    int getProgressPercentage(long,long) -> a
    int progressToTimer(int,int) -> a
    java.lang.String getAboutHtml(android.app.Activity) -> a
    android.app.Dialog showDialog(android.content.Context,java.lang.String) -> a
com.friends.zingradio.util.Utilities$1 -> com.friends.zingradio.e.i:
    void onClick(android.content.DialogInterface,int) -> onClick
com.friends.zingradio.util.XmlParser -> com.friends.zingradio.e.j:
    org.xmlpull.v1.XmlPullParser parser -> p
    java.lang.String ns -> q
    void skip(org.xmlpull.v1.XmlPullParser) -> a
crittercism.android.a -> a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a(int) -> a
    void a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String a() -> a
crittercism.android.a$a -> a.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
crittercism.android.a$b -> a.a.c:
    java.util.HashMap a -> a
    java.lang.String b -> b
    void a() -> a
    java.lang.String a(int) -> a
crittercism.android.a$c -> a.a.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
crittercism.android.b -> a.a.e:
    java.lang.String c -> c
    crittercism.android.c d -> d
    android.content.Context e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String a -> a
    int b -> b
    boolean l -> l
    java.lang.String m -> m
    org.json.JSONObject n -> n
    java.lang.Object o -> o
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String b() -> b
    org.json.JSONObject c() -> c
    double j() -> i
    long k() -> j
    java.lang.String l() -> k
    org.json.JSONObject m() -> l
    org.json.JSONObject n() -> m
    java.lang.String o() -> n
    org.json.JSONObject d() -> d
    org.json.JSONObject a(boolean[]) -> a
    int c(java.lang.String) -> c
    org.json.JSONArray p() -> o
    float e() -> e
    float f() -> f
    float q() -> p
    org.json.JSONObject a(org.json.JSONObject) -> a
    java.lang.String g() -> g
    void h() -> h
crittercism.android.b$a -> a.a.f:
    java.lang.StringBuilder a -> a
    java.lang.StringBuilder b -> b
    java.lang.String[] c -> c
    boolean d -> d
    java.lang.Process e -> e
    java.lang.Object f -> f
    java.lang.Thread g -> g
    crittercism.android.b$b h -> h
    crittercism.android.b$b i -> i
    boolean a() -> a
    void b() -> b
    void c() -> c
    java.lang.StringBuilder d() -> d
    java.lang.Object call() -> call
crittercism.android.b$b -> a.a.g:
    java.io.InputStream a -> a
    java.lang.StringBuilder b -> b
    java.io.BufferedReader c -> c
    java.lang.StringBuilder a() -> a
    void b() -> b
    void run() -> run
crittercism.android.c -> a.a.h:
    org.apache.http.impl.client.DefaultHttpClient a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    org.apache.http.impl.client.DefaultHttpClient a() -> a
    java.lang.String a(org.apache.http.client.methods.HttpRequestBase) -> a
    java.lang.String a(java.lang.String,org.json.JSONObject) -> a
    java.lang.String a(java.lang.String,org.json.JSONObject,java.lang.String[],java.lang.String) -> a
crittercism.android.d -> a.a.i:
    crittercism.android.d$a a -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
crittercism.android.d$1 -> a.a.j:
    int[] a -> a
crittercism.android.d$a -> a.a.k:
    crittercism.android.d$a a -> a
    crittercism.android.d$a b -> b
    crittercism.android.d$a c -> c
    crittercism.android.d$a d -> d
    crittercism.android.d$a e -> e
    crittercism.android.d$a f -> f
    crittercism.android.d$a g -> g
    crittercism.android.d$a h -> h
    crittercism.android.d$a i -> i
    crittercism.android.d$a[] j -> j
    crittercism.android.d$a[] values() -> values
    crittercism.android.d$a valueOf(java.lang.String) -> valueOf
crittercism.android.e -> a.a.l:
    java.lang.String c -> c
    java.lang.String a -> a
    int d -> d
    java.lang.String b -> b
    crittercism.android.e a(org.json.JSONObject) -> a
crittercism.android.f -> a.a.m:
    crittercism.android.f$a a -> a
crittercism.android.f$a -> a.a.n:
    crittercism.android.f$a a -> a
    crittercism.android.f$a b -> b
    crittercism.android.f$a c -> c
    crittercism.android.f$a d -> d
    crittercism.android.f$a e -> e
    crittercism.android.f$a[] f -> f
    crittercism.android.f$a[] values() -> values
    crittercism.android.f$a valueOf(java.lang.String) -> valueOf
crittercism.android.g -> a.a.o:
    byte[] a -> a
    byte[] b -> b
    byte[] c -> c
    byte[] a(byte[],int,int,byte[],int) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(byte[],int) -> a
crittercism.android.h -> a.a.p:
    java.math.BigInteger a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
crittercism.android.i -> a.a.q:
    java.lang.String a() -> a
    void b() -> b
    org.json.JSONObject c() -> c
    crittercism.android.i a(org.json.JSONObject) -> a
    crittercism.android.i d() -> d
crittercism.android.j -> a.a.r:
    java.lang.String a -> a
    java.util.Vector b -> b
    java.util.Vector e() -> e
    void a(java.lang.Object) -> a
    void a(java.util.Vector) -> a
    void f() -> f
crittercism.android.k -> a.a.s:
    java.lang.String c -> c
    org.json.JSONArray d -> d
    org.json.JSONArray e -> e
    org.json.JSONObject f -> f
    java.util.Date g -> g
    int h -> h
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    crittercism.android.k a(org.json.JSONObject) -> a
    crittercism.android.k c() -> c
    void a(int) -> a
crittercism.android.l -> a.a.t:
    org.json.JSONObject a() -> a
    void b() -> b
    crittercism.android.l c() -> c
crittercism.android.l$a -> a.a.u:
    java.lang.String a -> a
    boolean accept(java.io.File,java.lang.String) -> accept
crittercism.android.m -> a.a.v:
    java.lang.String c -> c
    org.json.JSONArray d -> d
    org.json.JSONArray e -> e
    org.json.JSONObject f -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    crittercism.android.m a(org.json.JSONObject) -> a
    crittercism.android.m c() -> c
    void a(java.lang.Throwable) -> a
    void d() -> d
    void g() -> g
crittercism.android.m$1 -> a.a.w:
    crittercism.android.m a -> a
    java.lang.String a() -> a
    java.lang.Object call() -> call
shared.ui.actionscontentview.ActionsContentView -> shared.ui.actionscontentview.ActionsContentView:
    java.lang.String TAG -> a
    shared.ui.actionscontentview.ActionsContentView$ContentScrollController mContentScrollController -> b
    android.view.GestureDetector mGestureDetector -> c
    android.view.View viewShadow -> d
    shared.ui.actionscontentview.ActionsLayout viewActionsContainer -> e
    shared.ui.actionscontentview.ContentLayout viewContentContainer -> f
    int mSpacingType -> g
    int mSpacing -> h
    int mActionsSpacing -> i
    int mShadowWidth -> j
    int mFlingDuration -> k
    int mFadeType -> l
    int mFadeValue -> m
    boolean isSwipingEnabled -> n
    int mSwipeType -> o
    int mSwipeEdgeWidth -> p
    boolean mForceRefresh -> q
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.view.ViewGroup getActionsContainer() -> getActionsContainer
    android.view.ViewGroup getContentContainer() -> getContentContainer
    boolean isActionsShown() -> a
    void showActions() -> b
    boolean isContentShown() -> c
    void showContent() -> d
    void toggleActions() -> e
    void setSpacingType(int) -> setSpacingType
    int getSpacingType() -> getSpacingType
    void setSpacingWidth(int) -> setSpacingWidth
    int getSpacingWidth() -> getSpacingWidth
    void setActionsSpacingWidth(int) -> setActionsSpacingWidth
    int getActionsSpacingWidth() -> getActionsSpacingWidth
    void setShadowVisible(boolean) -> setShadowVisible
    boolean isShadowVisible() -> f
    void setShadowWidth(int) -> setShadowWidth
    int getShadowWidth() -> getShadowWidth
    void setFlingDuration(int) -> setFlingDuration
    int getFlingDuration() -> getFlingDuration
    void setFadeType(int) -> setFadeType
    int getFadeType() -> getFadeType
    void setFadeValue(int) -> setFadeValue
    int getFadeValue() -> getFadeValue
    boolean isSwipingEnabled() -> g
    void setSwipingEnabled(boolean) -> setSwipingEnabled
    void setSwipingType(int) -> setSwipingType
    int getSwipingType() -> getSwipingType
    void setSwipingEdgeWidth(int) -> setSwipingEdgeWidth
    int getSwipingEdgeWidth() -> getSwipingEdgeWidth
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void fadeViews() -> h
    boolean clearPressedState(android.view.ViewGroup) -> a
    void access$0(shared.ui.actionscontentview.ActionsContentView) -> a
    shared.ui.actionscontentview.ContentLayout access$1(shared.ui.actionscontentview.ActionsContentView) -> b
    int access$2(shared.ui.actionscontentview.ActionsContentView) -> c
    int access$3(shared.ui.actionscontentview.ActionsContentView) -> d
    int access$4(shared.ui.actionscontentview.ActionsContentView) -> e
    int access$5(shared.ui.actionscontentview.ActionsContentView) -> f
    int access$6(shared.ui.actionscontentview.ActionsContentView) -> g
    int access$7(shared.ui.actionscontentview.ActionsContentView) -> h
    int access$8(shared.ui.actionscontentview.ActionsContentView) -> i
shared.ui.actionscontentview.ActionsContentView$1 -> shared.ui.actionscontentview.a:
    shared.ui.actionscontentview.ActionsContentView this$0 -> a
    void onSwipe(int) -> a
shared.ui.actionscontentview.ActionsContentView$ContentScrollController -> shared.ui.actionscontentview.b:
    android.widget.Scroller mScroller -> b
    java.lang.Boolean mHandleEvent -> c
    int mLastFlingX -> d
    boolean isContentShown -> e
    shared.ui.actionscontentview.ActionsContentView this$0 -> a
    void init() -> a
    boolean isHandled() -> b
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onUp(android.view.MotionEvent) -> a
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean isContentShown() -> c
    void hideContent(int) -> a
    void showContent(int) -> b
    float getScrollFactor() -> d
    void run() -> run
    void reset() -> e
    void completeScrolling() -> f
    void fling(int,int,int) -> a
    void scrollBy(int) -> c
    int getRightBound() -> g
    void access$0(shared.ui.actionscontentview.ActionsContentView$ContentScrollController,boolean) -> a
shared.ui.actionscontentview.ActionsContentView$SavedState -> shared.ui.actionscontentview.ActionsContentView$SavedState:
    boolean isContentShown -> a
    int mSpacingType -> b
    int mSpacing -> c
    int mActionsSpacing -> d
    boolean isShadowVisible -> e
    int mShadowWidth -> f
    boolean isSwipingEnabled -> g
    int mFlingDuration -> h
    int mFadeType -> i
    int mFadeValue -> j
    int mSwipeType -> k
    int mSwipeEdgeWidth -> l
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void access$0(shared.ui.actionscontentview.ActionsContentView$SavedState,boolean) -> a
    void access$1(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> a
    void access$2(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> b
    void access$3(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> c
    void access$4(shared.ui.actionscontentview.ActionsContentView$SavedState,boolean) -> b
    void access$5(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> d
    void access$6(shared.ui.actionscontentview.ActionsContentView$SavedState,boolean) -> c
    void access$7(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> e
    void access$8(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> f
    void access$9(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> g
    void access$10(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> h
    void access$11(shared.ui.actionscontentview.ActionsContentView$SavedState,int) -> i
    boolean access$12(shared.ui.actionscontentview.ActionsContentView$SavedState) -> a
    int access$13(shared.ui.actionscontentview.ActionsContentView$SavedState) -> b
    int access$14(shared.ui.actionscontentview.ActionsContentView$SavedState) -> c
    int access$15(shared.ui.actionscontentview.ActionsContentView$SavedState) -> d
    boolean access$16(shared.ui.actionscontentview.ActionsContentView$SavedState) -> e
    int access$17(shared.ui.actionscontentview.ActionsContentView$SavedState) -> f
    int access$18(shared.ui.actionscontentview.ActionsContentView$SavedState) -> g
    int access$19(shared.ui.actionscontentview.ActionsContentView$SavedState) -> h
    int access$20(shared.ui.actionscontentview.ActionsContentView$SavedState) -> i
    int access$21(shared.ui.actionscontentview.ActionsContentView$SavedState) -> j
    boolean access$22(shared.ui.actionscontentview.ActionsContentView$SavedState) -> k
    int access$23(shared.ui.actionscontentview.ActionsContentView$SavedState) -> l
shared.ui.actionscontentview.ActionsContentView$SavedState$1 -> shared.ui.actionscontentview.c:
    shared.ui.actionscontentview.ActionsContentView$SavedState[] newArray(int) -> a
    shared.ui.actionscontentview.ActionsContentView$SavedState createFromParcel(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
shared.ui.actionscontentview.ActionsLayout -> shared.ui.actionscontentview.d:
    android.graphics.Paint mFadePaint -> a
    int mFadeFactor -> b
    void invalidate(int) -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
shared.ui.actionscontentview.ContentLayout -> shared.ui.actionscontentview.e:
    android.graphics.Rect mHitRect -> a
    android.graphics.Paint mFadePaint -> b
    int mFadeFactor -> c
    shared.ui.actionscontentview.ContentLayout$OnSwipeListener mOnSwipeListener -> d
    void setOnSwipeListener(shared.ui.actionscontentview.ContentLayout$OnSwipeListener) -> setOnSwipeListener
    void invalidate(int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
shared.ui.actionscontentview.ContentLayout$OnSwipeListener -> shared.ui.actionscontentview.f:
    void onSwipe(int) -> a
shared.ui.actionscontentview.R -> shared.ui.actionscontentview.g:
shared.ui.actionscontentview.R$dimen -> shared.ui.actionscontentview.h:
    int default_actionscontentview_spacing -> default_actionscontentview_spacing
    int default_actionscontentview_swiping_edge_width -> default_actionscontentview_swiping_edge_width
    int default_actionscontentview_actions_spacing -> default_actionscontentview_actions_spacing
shared.ui.actionscontentview.R$integer -> shared.ui.actionscontentview.i:
    int default_actionscontentview_fade_max_value -> default_actionscontentview_fade_max_value
    int default_actionscontentview_fling_duration -> default_actionscontentview_fling_duration
shared.ui.actionscontentview.R$styleable -> shared.ui.actionscontentview.j:
    int ActionsContentView_spacing -> ActionsContentView_spacing
    int ActionsContentView_fling_duration -> ActionsContentView_fling_duration
    int[] ActionsContentView -> ActionsContentView
    int ActionsContentView_actions_layout -> ActionsContentView_actions_layout
    int ActionsContentView_spacing_type -> ActionsContentView_spacing_type
    int ActionsContentView_shadow_drawable -> ActionsContentView_shadow_drawable
    int ActionsContentView_fade_type -> ActionsContentView_fade_type
    int ActionsContentView_actions_spacing -> ActionsContentView_actions_spacing
    int ActionsContentView_swiping_type -> ActionsContentView_swiping_type
    int ActionsContentView_swiping_edge_width -> ActionsContentView_swiping_edge_width
    int ActionsContentView_shadow_width -> ActionsContentView_shadow_width
    int ActionsContentView_content_layout -> ActionsContentView_content_layout
    int ActionsContentView_fade_max_value -> ActionsContentView_fade_max_value
